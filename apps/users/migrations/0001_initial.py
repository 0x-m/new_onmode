# Generated by Django 4.0.3 on 2022-09-07 16:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import apps.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                (
                    "phone_num",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^09[0-9]{9}$"
                            )
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("man", "man"), ("woman", "woman")],
                        max_length=10,
                    ),
                ),
                (
                    "user_code",
                    models.CharField(
                        default=apps.users.models.User.generate_usecode,
                        editable=False,
                        max_length=20,
                    ),
                ),
                (
                    "referral_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("request_for_shop", models.BooleanField(default=False)),
                ("request_accepted", models.BooleanField(default=False)),
                ("has_shop", models.BooleanField(default=False)),
                ("has_password", models.BooleanField(default=False)),
                (
                    "use_custom_storage_capcity",
                    models.BooleanField(
                        default=False,
                        help_text="check if you want arbitrary storage capacity for this user",
                    ),
                ),
                (
                    "custom_storage_capacity",
                    models.FloatField(
                        default=20, help_text="custom storage in mega bytes"
                    ),
                ),
                (
                    "consumed_storage",
                    models.FloatField(
                        default=0, help_text="consumed storage in mega bytes"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", apps.users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("body", models.TextField(max_length=5000)),
                ("seen_by_user", models.BooleanField(default=False)),
                ("seen_by_intendant", models.BooleanField(default=False)),
                ("can_reply", models.BooleanField(default=False)),
                ("closed", models.BooleanField(default=False)),
                ("replied", models.BooleanField(default=False)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TicketType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="wallet",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "available",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10
                    ),
                ),
                (
                    "freezed",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10
                    ),
                ),
                (
                    "date_last_withdraw",
                    models.DateTimeField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TicketReply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField(max_length=5000)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("seen_by_user", models.BooleanField(default=False)),
                ("seen_by_intendant", models.BooleanField(default=False)),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="users.ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="answered_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ticket",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tickets",
                to="users.tickettype",
            ),
        ),
        migrations.AddField(
            model_name="ticket",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tickets",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Normal", "Normal"),
                            ("Warning", "Warning"),
                            ("Info", "Info"),
                        ],
                        default="Info",
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("body", models.TextField(blank=True, max_length=5000)),
                ("read", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(default="", max_length=100)),
                ("phone_number", models.CharField(default="", max_length=100)),
                ("province", models.CharField(default="", max_length=255)),
                ("city", models.CharField(default="", max_length=255)),
                ("town", models.CharField(default="", max_length=255)),
                ("description", models.TextField()),
                ("postal_code", models.CharField(max_length=20)),
                ("removed", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DepositTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.PositiveBigIntegerField(default=0)),
                (
                    "date_committed",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("succeed", models.BooleanField(default=False)),
                ("authority", models.CharField(blank=True, max_length=255)),
                ("ref_id", models.CharField(blank=True, max_length=255)),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deposits",
                        to="users.wallet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CheckoutRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "merch_card",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("amount", models.PositiveBigIntegerField(default=0)),
                ("call_me", models.BooleanField(default=False)),
                ("status", models.CharField(blank=True, max_length=100)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("inp", "Inprogress"),
                            ("ful", "Fulfilled"),
                            ("rej", "Rejected"),
                        ],
                        default="inp",
                        max_length=3,
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "date_proceeded",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="checkouts",
                        to="users.wallet",
                    ),
                ),
            ],
        ),
    ]
