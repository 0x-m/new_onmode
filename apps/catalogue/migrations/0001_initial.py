# Generated by Django 4.0.3 on 2022-08-06 21:42

import apps.catalogue.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import mptt.fields
import onmode.storage_backends


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('en_name', models.CharField(max_length=50)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True)),
                ('en_slug', models.SlugField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=90)),
                ('meta_keywords', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.CharField(blank=True, max_length=100)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childs', to='catalogue.category')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=apps.catalogue.models.Discount.get_discount_code, editable=False, max_length=8)),
                ('percent', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('max_amount', models.PositiveBigIntegerField(default=10000)),
                ('max_sales_allowed', models.PositiveIntegerField(default=1)),
                ('sales', models.PositiveIntegerField(default=0, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fa_name', models.CharField(blank=True, max_length=20)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('type', models.CharField(choices=[('NUM', 'Number'), ('TXT', 'Text'), ('BOL', 'Boolean'), ('CHO', 'Choices'), ('CHS', 'MultiChoices')], default='NUM', max_length=3)),
                ('default', models.CharField(blank=True, max_length=100)),
                ('identifier', models.CharField(blank=True, max_length=255)),
                ('choices', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to=apps.catalogue.models.Photo.generate_path)),
                ('url', models.URLField(null=True)),
                ('alt', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_code', models.CharField(default=apps.catalogue.models.Product.get_product_code, editable=False, max_length=20)),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('en_name', models.CharField(blank=True, db_index=True, max_length=50)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True)),
                ('en_slug', models.SlugField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, db_index=True, max_length=255)),
                ('meta_description', models.CharField(blank=True, db_index=True, max_length=255)),
                ('meta_keywords', models.CharField(blank=True, db_index=True, max_length=255)),
                ('sku', models.CharField(blank=True, max_length=50)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('stock_low_threshold', models.IntegerField(default=1)),
                ('free_shipping', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('sold_individually', models.BooleanField(default=False)),
                ('price', models.PositiveBigIntegerField(default=0)),
                ('has_sales', models.BooleanField(default=False)),
                ('sales_price', models.PositiveBigIntegerField(default=0)),
                ('shipping_cost', models.PositiveBigIntegerField(default=0)),
                ('description', models.TextField(blank=True, max_length=5000)),
                ('attributes', models.JSONField(blank=True, default=dict, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='catalogue.category')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.discount')),
                ('preview', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preview', to='catalogue.photo')),
                ('relateds', models.ManyToManyField(to='catalogue.product')),
            ],
            managers=[
                ('publisheds', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('meta_title', models.CharField(blank=True, max_length=100)),
                ('meta_description', models.CharField(blank=True, max_length=400)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('address_description', models.TextField(blank=True, max_length=1000)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('user_custom_product_capacity', models.BooleanField(default=False)),
                ('product_capacity', models.PositiveIntegerField(default=100)),
                ('product_count', models.PositiveIntegerField(default=0)),
                ('fee', models.PositiveIntegerField(default=9)),
                ('active', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shops', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('options', models.ManyToManyField(related_name='types', to='catalogue.option')),
            ],
        ),
        migrations.CreateModel(
            name='ProductStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('comments', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('rates_avg', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='catalogue.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOptionValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(max_length=5000)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option_values', to='catalogue.option')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='catalogue.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='catalogue.shop'),
        ),
        migrations.AddField(
            model_name='photo',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='catalogue.product'),
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='catalogue.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CreateShopRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=20)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted', models.BooleanField(default=False)),
                ('rejected', models.BooleanField(default=False)),
                ('reject_status', models.TextField(blank=True, max_length=1000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shop_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('published', models.BooleanField(default=False)),
                ('rate', models.PositiveBigIntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='catalogue.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featureds', models.CharField(blank=True, max_length=1000)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('en_name', models.CharField(max_length=40, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, editable=False, null=True)),
                ('en_slug', models.SlugField(blank=True, editable=False, null=True)),
                ('slogan', models.CharField(blank=True, max_length=1000)),
                ('meta_title', models.CharField(blank=True, max_length=40)),
                ('meta_description', models.CharField(blank=True, max_length=90)),
                ('description', models.TextField(blank=True, max_length=2000)),
                ('prefer_collection_discount', models.BooleanField(default=False)),
                ('page_poster_alt', models.CharField(blank=True, max_length=255)),
                ('page_poster_url', models.URLField(blank=True, null=True)),
                ('page_poster', models.ImageField(blank=True, null=True, storage=onmode.storage_backends.SiteStorage(), upload_to='')),
                ('index_view', models.BooleanField(default=False)),
                ('index_poster', models.ImageField(blank=True, null=True, storage=onmode.storage_backends.SiteStorage(), upload_to='')),
                ('index_poster_url', models.URLField(blank=True, null=True)),
                ('index_poster_link', models.URLField(blank=True, null=True)),
                ('index_poster_alt', models.CharField(blank=True, max_length=255)),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.discount')),
                ('products', models.ManyToManyField(blank=True, related_name='collections', to='catalogue.product')),
            ],
        ),
    ]
